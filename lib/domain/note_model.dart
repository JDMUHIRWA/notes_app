// Domain model representing a note in the application
// This file contains the Note class which serves as the data structure for notes

// Import required for handling Firestore timestamp conversion
import 'package:cloud_firestore/cloud_firestore.dart';

/// Data model class representing a note in the application
//
// This class encapsulates all the properties and behavior of a note:
// - id: unique identifier for the note
// - text: the actual content of the note
// - timestamp: when the note was created/last modified
//
// The class provides methods for:
// - Converting from Firestore document data to Note object
// - Converting from Note object to Map for Firestore storage
class Note {
  /// Unique identifier for the note (generated by Firestore)
  final String id;

  /// The actual text content of the note
  final String text;

  /// Timestamp indicating when the note was created or last modified
  final DateTime timestamp;

  /// Constructor for creating a Note instance
  ///
  /// [id] - Unique identifier for the note
  /// [text] - The content of the note
  /// [timestamp] - When the note was created/modified
  Note({required this.id, required this.text, required this.timestamp});

  /// Factory constructor to create a Note from Firestore document data
  ///
  /// [map] - Map containing the note data from Firestore
  /// Returns: Note instance created from the provided map data
  ///
  /// This method handles the conversion of Firestore Timestamp to DateTime
  factory Note.fromMap(Map<String, dynamic> map) {
    return Note(
      id: map['id'] ?? '', // Default to empty string if id is null
      text: map['text'] ?? '', // Default to empty string if text is null
      timestamp: (map['timestamp'] as Timestamp)
          .toDate(), // Convert Firestore Timestamp to DateTime
    );
  }

  /// Converts the Note instance to a Map for Firestore storage
  ///
  /// Returns: Map<String, dynamic> containing the note data
  ///
  /// Note: The ID is not included in the map as it's handled separately by Firestore
  Map<String, dynamic> toMap() {
    return {'text': text, 'timestamp': timestamp};
  }
}
